name: Amazon Linux EC2

on: [push]
      # paths-ignore:
      #   - 'README.md'
      #   - 'LICENSE.md'
  
jobs:
    deploy-to-ec2:
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout Code
          uses: actions/checkout@v3
  
        - name: Set Up Python
          uses: actions/setup-python@v3
          with:
            python-version: '3.x'
  
        - name: Instalando Dependencias
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
  
        - name: Set Up SSH Key
          run: |
            echo "${{ secrets.EC2_PRIVATE_KEY }}" > /tmp/mykey-ec2.pem
            chmod 600 /tmp/mykey-ec2.pem
  
        - name: SSH into EC2 and Deploy
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: 'us-east-1'
          run: |
            ssh -i /tmp/mykey-ec2.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP }} << EOF
              # Remove the /home/ec2-user/app directory if it exists
              if [ -d "/home/ec2-user/app" ]; then
                echo "Removing existing /home/ec2-user/app directory..."
                sudo rm -rf /home/ec2-user/app
              fi
  
              # Recreate the /home/ec2-user/app directory
              mkdir -p /home/ec2-user/app
              cd /home/ec2-user/app
  
              # Install git if not already installed
              sudo yum install -y git || sudo apt-get install -y git
  
              # Clone the repository again
              git clone https://github.com/jncendrette/pet-management-app.git .
  
              # Ensure virtual environment exists, create if not
              if [ ! -d "/home/ec2-user/myenv" ]; then
                python3 -m venv /home/ec2-user/myenv
              fi
  
              # Activate virtual environment
              . /home/ec2-user/myenv/bin/activate
  
              # Install requirements, including Flask
              if [ -f requirements.txt ]; then
                pip install --upgrade pip
                pip install -r requirements.txt
              else
                echo "requirements.txt file not found!"
              fi
  
              # Install Flask explicitly if missing from requirements.txt
              pip install flask
  
              # Stop any existing Gunicorn process on port 5000
              sudo fuser -k 5000/tcp || true
  
              # Start Gunicorn to serve the Flask app
              nohup gunicorn --bind 0.0.0.0:5000 app:app > gunicorn.log 2>&1 & disown
  
              # Log message for successful deployment
              echo "Deploy completado com sucesso!"
            EOF